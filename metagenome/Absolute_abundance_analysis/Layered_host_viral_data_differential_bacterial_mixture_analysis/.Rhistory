return(sig_matrix)
}
sig_matrix <- create_significance_annotation(pval_matrix)
# 创建行注释（细菌）
bacteria_lfc <- bacteria_data$stats$lfc_GroupMI[rownames(cor_matrix)]
bacteria_qval <- bacteria_data$stats$q_GroupMI[rownames(cor_matrix)]
row_ha <- rowAnnotation(
LFC = anno_simple(
bacteria_lfc,
col = nature_colors$correlation,
na_col = "white"
),
Regulation = anno_simple(
ifelse(bacteria_lfc > 0, "Up", "Down"),
col = c("Up" = nature_colors$lfc_up, "Down" = nature_colors$lfc_down),
simple_anno_size = unit(0.3, "cm")
),
annotation_name_side = "top",
annotation_name_gp = gpar(fontsize = 8, family = "SimHei")
)
# 创建列注释（病毒）
virus_lfc <- virus_data$stats$lfc_GroupMI[colnames(cor_matrix)]
virus_qval <- virus_data$stats$q_GroupMI[colnames(cor_matrix)]
col_ha <- columnAnnotation(
LFC = anno_simple(
virus_lfc,
col = nature_colors$correlation,
na_col = "white"
),
Regulation = anno_simple(
ifelse(virus_lfc > 0, "Up", "Down"),
col = c("Up" = nature_colors$lfc_up, "Down" = nature_colors$lfc_down),
simple_anno_size = unit(0.3, "cm")
),
annotation_name_side = "left",
annotation_name_gp = gpar(fontsize = 8, family = "SimHei"),
annotation_name_offset = unit(c(1, 1), "cm")
)
# 创建主热图
main_heatmap <- Heatmap(
cor_matrix,
name = "Spearman\nCorrelation",
col = nature_colors$correlation,
rect_gp = gpar(col = "white", lwd = 1),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_row_names = TRUE,
show_column_names = TRUE,
row_names_gp = gpar(fontsize = 8, family = "SimHei"),
column_names_gp = gpar(fontsize = 8, family = "SimHei"),
column_names_rot = 45,
row_title = "细菌物种",
column_title = "病毒物种",
row_title_gp = gpar(fontsize = 12, fontface = "bold", family = "SimHei"),
column_title_gp = gpar(fontsize = 12, fontface = "bold", family = "SimHei"),
row_title_side = "left",
column_title_side = "top",
left_annotation = row_ha,
top_annotation = col_ha,
heatmap_legend_param = list(
title_gp = gpar(fontsize = 10, fontface = "bold", family = "SimHei"),
labels_gp = gpar(fontsize = 8, family = "SimHei"),
# 调整图例内部布局
title_position = "rightcenter-rot",  # 标题位置
legend_direction = "vertical",      # 垂直方向
legend_width = unit(4, "cm"),       # 图例宽度
legend_height = unit(8, "cm")       # 图例高度
),
# 热图比例
heatmap_width = unit(0.2, "npc"),
heatmap_height = unit(0.2, "npc"),
# 添加显著性标注
cell_fun = function(j, i, x, y, width, height, fill) {
if(sig_matrix[i, j] != "NS") {
grid.text(sig_matrix[i, j], x, y, gp = gpar(fontsize = 8, fontface = "bold"))
}
}
)
# 保存图片 - 大幅增加左下角边距
png("Bacteria_Virus_Correlation_NatureStyle_Chinese.png",
width = 8000, height = 6000, res = 300)
draw(main_heatmap,
heatmap_legend_side = "right",
annotation_legend_side = "right",
column_title = "细菌-病毒相关性分析",
column_title_gp = gpar(fontsize = 16, fontface = "bold", family = "SimHei"),
# 关键修改：为左下角增加更多边距（下边距和左边距）
padding = unit(c(11, 11, 1, 6), "cm"))  # 下、左、上、右
# 安装必要的包（如果尚未安装）
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
required_packages <- c("readxl", "dplyr", "tidyr", "RColorBrewer", "circlize", "showtext")
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
install.packages(pkg)
}
}
# 安装Bioconductor包
bioc_packages <- c("ComplexHeatmap")
for (pkg in bioc_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
BiocManager::install(pkg)
}
}
# 加载必要的包
library(readxl)
library(ComplexHeatmap)
library(circlize)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(showtext)
# 设置中文字体
font_add("SimHei", "simhei.ttf")  # Windows系统
showtext_auto()
# 设置工作目录和文件路径
base_path <- "E:/Python/MI_Analysis/metagenome/Absolute_abundance_analysis/Layered_host_viral_data_differential_bacterial_mixture_analysis"
setwd(base_path)
# 读取数据
metadata <- read_excel("sample_metadata.xlsx")
bacteria_df <- read_excel("Species_stratification_host_integration.xlsx")
virus_df <- read_excel("differential_bacteria.xlsx")
# 数据预处理函数
preprocess_data <- function(df, name) {
# 识别样本列
sample_cols <- grep("^(CON|MI)[0-9]+$", colnames(df), value = TRUE)
# 提取丰度矩阵
abundance <- df[, sample_cols] %>% as.data.frame()
rownames(abundance) <- df$taxon
abundance <- as.data.frame(t(abundance))
# 提取统计信息
stats_info <- list()
if ("lfc_GroupMI" %in% colnames(df)) {
stats_info$lfc_GroupMI <- setNames(df$lfc_GroupMI, df$taxon)
}
if ("q_GroupMI" %in% colnames(df)) {
stats_info$q_GroupMI <- setNames(df$q_GroupMI, df$taxon)
}
cat(name, "- 样本数:", nrow(abundance), "物种数:", ncol(abundance), "\n")
return(list(abundance = abundance, stats = stats_info))
}
# 预处理数据
bacteria_data <- preprocess_data(bacteria_df, "细菌")
virus_data <- preprocess_data(virus_df, "病毒")
bacteria_abundance <- bacteria_data$abundance
virus_abundance <- virus_data$abundance
# 计算Spearman相关性
calculate_correlation <- function(bact_abund, vir_abund) {
cor_matrix <- matrix(NA, nrow = ncol(bact_abund), ncol = ncol(vir_abund))
pval_matrix <- matrix(NA, nrow = ncol(bact_abund), ncol = ncol(vir_abund))
rownames(cor_matrix) <- colnames(bact_abund)
colnames(cor_matrix) <- colnames(vir_abund)
rownames(pval_matrix) <- colnames(bact_abund)
colnames(pval_matrix) <- colnames(vir_abund)
for (i in 1:ncol(bact_abund)) {
for (j in 1:ncol(vir_abund)) {
result <- cor.test(bact_abund[, i], vir_abund[, j],
method = "spearman", exact = FALSE)
cor_matrix[i, j] <- result$estimate
pval_matrix[i, j] <- result$p.value
}
}
return(list(correlation = cor_matrix, pvalue = pval_matrix))
}
# 计算相关性矩阵
cor_results <- calculate_correlation(bacteria_abundance, virus_abundance)
cor_matrix <- cor_results$correlation
pval_matrix <- cor_results$pvalue
# Nature风格的颜色配置
nature_colors <- list(
correlation = colorRamp2(
c(-1, -0.5, 0, 0.5, 1),
c("#2166AC", "#67A9CF", "#F7F7F7", "#EF8A62", "#B2182B")  # 蓝-白-红配色
),
lfc_up = "#D73027",    # 红色表示上调
lfc_down = "#4575B4",  # 蓝色表示下调
significance = c("NS" = "lightgray", "*" = "black", "**" = "black", "***" = "black")
)
# 创建显著性标注
create_significance_annotation <- function(pval_matrix) {
sig_matrix <- matrix("NS", nrow = nrow(pval_matrix), ncol = ncol(pval_matrix))
sig_matrix[pval_matrix < 0.05] <- "*"
sig_matrix[pval_matrix < 0.01] <- "**"
sig_matrix[pval_matrix < 0.001] <- "***"
rownames(sig_matrix) <- rownames(pval_matrix)
colnames(sig_matrix) <- colnames(pval_matrix)
return(sig_matrix)
}
sig_matrix <- create_significance_annotation(pval_matrix)
# 创建行注释（细菌）
bacteria_lfc <- bacteria_data$stats$lfc_GroupMI[rownames(cor_matrix)]
bacteria_qval <- bacteria_data$stats$q_GroupMI[rownames(cor_matrix)]
row_ha <- rowAnnotation(
LFC = anno_simple(
bacteria_lfc,
col = nature_colors$correlation,
na_col = "white"
),
Regulation = anno_simple(
ifelse(bacteria_lfc > 0, "Up", "Down"),
col = c("Up" = nature_colors$lfc_up, "Down" = nature_colors$lfc_down),
simple_anno_size = unit(0.3, "cm")
),
annotation_name_side = "top",
annotation_name_gp = gpar(fontsize = 8, family = "SimHei")
)
# 创建列注释（病毒）
virus_lfc <- virus_data$stats$lfc_GroupMI[colnames(cor_matrix)]
virus_qval <- virus_data$stats$q_GroupMI[colnames(cor_matrix)]
col_ha <- columnAnnotation(
LFC = anno_simple(
virus_lfc,
col = nature_colors$correlation,
na_col = "white"
),
Regulation = anno_simple(
ifelse(virus_lfc > 0, "Up", "Down"),
col = c("Up" = nature_colors$lfc_up, "Down" = nature_colors$lfc_down),
simple_anno_size = unit(0.3, "cm")
),
annotation_name_side = "left",
annotation_name_gp = gpar(fontsize = 8, family = "SimHei"),
annotation_name_offset = unit(c(1, 1), "cm")
)
# 创建主热图
main_heatmap <- Heatmap(
cor_matrix,
name = "Spearman\nCorrelation",
col = nature_colors$correlation,
rect_gp = gpar(col = "white", lwd = 1),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_row_names = TRUE,
show_column_names = TRUE,
row_names_gp = gpar(fontsize = 8, family = "SimHei"),
column_names_gp = gpar(fontsize = 8, family = "SimHei"),
column_names_rot = 45,
row_title = "细菌物种",
column_title = "病毒物种",
row_title_gp = gpar(fontsize = 12, fontface = "bold", family = "SimHei"),
column_title_gp = gpar(fontsize = 12, fontface = "bold", family = "SimHei"),
row_title_side = "left",
column_title_side = "top",
left_annotation = row_ha,
top_annotation = col_ha,
heatmap_legend_param = list(
title_gp = gpar(fontsize = 10, fontface = "bold", family = "SimHei"),
labels_gp = gpar(fontsize = 8, family = "SimHei"),
# 调整图例内部布局
title_position = "leftcenter-rot",  # 标题位置
legend_direction = "vertical",      # 垂直方向
legend_width = unit(4, "cm"),       # 图例宽度
legend_height = unit(8, "cm")       # 图例高度
),
# 热图比例
heatmap_width = unit(0.2, "npc"),
heatmap_height = unit(0.2, "npc"),
# 添加显著性标注
cell_fun = function(j, i, x, y, width, height, fill) {
if(sig_matrix[i, j] != "NS") {
grid.text(sig_matrix[i, j], x, y, gp = gpar(fontsize = 8, fontface = "bold"))
}
}
)
# 保存图片 - 大幅增加左下角边距
png("Bacteria_Virus_Correlation_NatureStyle_Chinese.png",
width = 8000, height = 6000, res = 300)
draw(main_heatmap,
heatmap_legend_side = "right",
annotation_legend_side = "right",
column_title = "细菌-病毒相关性分析",
column_title_gp = gpar(fontsize = 16, fontface = "bold", family = "SimHei"),
# 关键修改：为左下角增加更多边距（下边距和左边距）
padding = unit(c(11, 11, 1, 6), "cm"))  # 下、左、上、右
dev.off()
# 保存PDF版本 - 大幅增加左下角边距
pdf("Bacteria_Virus_Correlation_NatureStyle_Chinese.pdf", width = 30, height = 22)
draw(main_heatmap,
heatmap_legend_side = "left",
annotation_legend_side = "right",
column_title = "细菌-病毒相关性分析",
column_title_gp = gpar(fontsize = 16, fontface = "bold", family = "SimHei"),
# 关键修改：为左下角增加更多边距
padding = unit(c(11, 11, 1, 6), "cm"))  # 下、左、上、右
dev.off()
# 保存相关性结果
write.csv(cor_matrix, "correlation_matrix.csv")
write.csv(pval_matrix, "pvalue_matrix.csv")
cat("分析完成！结果已保存到:", base_path, "\n")
cat("生成的文件:\n")
cat("- Bacteria_Virus_Correlation_NatureStyle_Chinese.png (高清PNG，支持中文)\n")
cat("- Bacteria_Virus_Correlation_NatureStyle_Chinese.pdf (矢量PDF，支持中文)\n")
cat("- correlation_matrix.csv (相关性系数矩阵)\n")
cat("- pvalue_matrix.csv (P值矩阵)\n")
# 显示一些统计信息
cat("\n分析统计:\n")
cat("细菌物种数量:", nrow(cor_matrix), "\n")
cat("病毒物种数量:", ncol(cor_matrix), "\n")
cat("显著相关性数量 (p < 0.05):", sum(pval_matrix < 0.05, na.rm = TRUE), "\n")
cat("强相关性数量 (|r| > 0.6):", sum(abs(cor_matrix) > 0.6, na.rm = TRUE), "\n")
# 安装必要的包（如果尚未安装）
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
required_packages <- c("readxl", "dplyr", "tidyr", "RColorBrewer", "circlize", "showtext")
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
install.packages(pkg)
}
}
# 安装Bioconductor包
bioc_packages <- c("ComplexHeatmap")
for (pkg in bioc_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
BiocManager::install(pkg)
}
}
# 加载必要的包
library(readxl)
library(ComplexHeatmap)
library(circlize)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(showtext)
# 设置中文字体
font_add("SimHei", "simhei.ttf")  # Windows系统
showtext_auto()
# 设置工作目录和文件路径
base_path <- "E:/Python/MI_Analysis/metagenome/Absolute_abundance_analysis/Layered_host_viral_data_differential_bacterial_mixture_analysis"
setwd(base_path)
# 读取数据
metadata <- read_excel("sample_metadata.xlsx")
bacteria_df <- read_excel("Species_stratification_host_integration.xlsx")
virus_df <- read_excel("differential_bacteria.xlsx")
# 数据预处理函数
preprocess_data <- function(df, name) {
# 识别样本列
sample_cols <- grep("^(CON|MI)[0-9]+$", colnames(df), value = TRUE)
# 提取丰度矩阵
abundance <- df[, sample_cols] %>% as.data.frame()
rownames(abundance) <- df$taxon
abundance <- as.data.frame(t(abundance))
# 提取统计信息
stats_info <- list()
if ("lfc_GroupMI" %in% colnames(df)) {
stats_info$lfc_GroupMI <- setNames(df$lfc_GroupMI, df$taxon)
}
if ("q_GroupMI" %in% colnames(df)) {
stats_info$q_GroupMI <- setNames(df$q_GroupMI, df$taxon)
}
cat(name, "- 样本数:", nrow(abundance), "物种数:", ncol(abundance), "\n")
return(list(abundance = abundance, stats = stats_info))
}
# 预处理数据
bacteria_data <- preprocess_data(bacteria_df, "细菌")
virus_data <- preprocess_data(virus_df, "病毒")
bacteria_abundance <- bacteria_data$abundance
virus_abundance <- virus_data$abundance
# 计算Spearman相关性
calculate_correlation <- function(bact_abund, vir_abund) {
cor_matrix <- matrix(NA, nrow = ncol(bact_abund), ncol = ncol(vir_abund))
pval_matrix <- matrix(NA, nrow = ncol(bact_abund), ncol = ncol(vir_abund))
rownames(cor_matrix) <- colnames(bact_abund)
colnames(cor_matrix) <- colnames(vir_abund)
rownames(pval_matrix) <- colnames(bact_abund)
colnames(pval_matrix) <- colnames(vir_abund)
for (i in 1:ncol(bact_abund)) {
for (j in 1:ncol(vir_abund)) {
result <- cor.test(bact_abund[, i], vir_abund[, j],
method = "spearman", exact = FALSE)
cor_matrix[i, j] <- result$estimate
pval_matrix[i, j] <- result$p.value
}
}
return(list(correlation = cor_matrix, pvalue = pval_matrix))
}
# 计算相关性矩阵
cor_results <- calculate_correlation(bacteria_abundance, virus_abundance)
cor_matrix <- cor_results$correlation
pval_matrix <- cor_results$pvalue
# Nature风格的颜色配置
nature_colors <- list(
correlation = colorRamp2(
c(-1, -0.5, 0, 0.5, 1),
c("#2166AC", "#67A9CF", "#F7F7F7", "#EF8A62", "#B2182B")  # 蓝-白-红配色
),
lfc_up = "#D73027",    # 红色表示上调
lfc_down = "#4575B4",  # 蓝色表示下调
significance = c("NS" = "lightgray", "*" = "black", "**" = "black", "***" = "black")
)
# 创建显著性标注
create_significance_annotation <- function(pval_matrix) {
sig_matrix <- matrix("NS", nrow = nrow(pval_matrix), ncol = ncol(pval_matrix))
sig_matrix[pval_matrix < 0.05] <- "*"
sig_matrix[pval_matrix < 0.01] <- "**"
sig_matrix[pval_matrix < 0.001] <- "***"
rownames(sig_matrix) <- rownames(pval_matrix)
colnames(sig_matrix) <- colnames(pval_matrix)
return(sig_matrix)
}
sig_matrix <- create_significance_annotation(pval_matrix)
# 创建行注释（细菌）
bacteria_lfc <- bacteria_data$stats$lfc_GroupMI[rownames(cor_matrix)]
bacteria_qval <- bacteria_data$stats$q_GroupMI[rownames(cor_matrix)]
row_ha <- rowAnnotation(
LFC = anno_simple(
bacteria_lfc,
col = nature_colors$correlation,
na_col = "white"
),
Regulation = anno_simple(
ifelse(bacteria_lfc > 0, "Up", "Down"),
col = c("Up" = nature_colors$lfc_up, "Down" = nature_colors$lfc_down),
simple_anno_size = unit(0.3, "cm")
),
annotation_name_side = "top",
annotation_name_gp = gpar(fontsize = 8, family = "SimHei")
)
# 创建列注释（病毒）
virus_lfc <- virus_data$stats$lfc_GroupMI[colnames(cor_matrix)]
virus_qval <- virus_data$stats$q_GroupMI[colnames(cor_matrix)]
col_ha <- columnAnnotation(
LFC = anno_simple(
virus_lfc,
col = nature_colors$correlation,
na_col = "white"
),
Regulation = anno_simple(
ifelse(virus_lfc > 0, "Up", "Down"),
col = c("Up" = nature_colors$lfc_up, "Down" = nature_colors$lfc_down),
simple_anno_size = unit(0.3, "cm")
),
annotation_name_side = "left",
annotation_name_gp = gpar(fontsize = 8, family = "SimHei"),
annotation_name_offset = unit(c(1, 1), "cm")
)
# 创建主热图
main_heatmap <- Heatmap(
cor_matrix,
name = "Spearman\nCorrelation",
col = nature_colors$correlation,
rect_gp = gpar(col = "white", lwd = 1),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_row_names = TRUE,
show_column_names = TRUE,
row_names_gp = gpar(fontsize = 8, family = "SimHei"),
column_names_gp = gpar(fontsize = 8, family = "SimHei"),
column_names_rot = 45,
row_title = "细菌物种",
column_title = "病毒物种",
row_title_gp = gpar(fontsize = 12, fontface = "bold", family = "SimHei"),
column_title_gp = gpar(fontsize = 12, fontface = "bold", family = "SimHei"),
row_title_side = "left",
column_title_side = "top",
left_annotation = row_ha,
top_annotation = col_ha,
heatmap_legend_param = list(
title_gp = gpar(fontsize = 10, fontface = "bold", family = "SimHei"),
labels_gp = gpar(fontsize = 8, family = "SimHei"),
# 调整图例内部布局
title_position = "leftcenter-rot",  # 标题位置
legend_direction = "vertical",      # 垂直方向
legend_width = unit(4, "cm"),       # 图例宽度
legend_height = unit(8, "cm")       # 图例高度
),
# 热图比例
heatmap_width = unit(0.2, "npc"),
heatmap_height = unit(0.2, "npc"),
# 添加显著性标注
cell_fun = function(j, i, x, y, width, height, fill) {
if(sig_matrix[i, j] != "NS") {
grid.text(sig_matrix[i, j], x, y, gp = gpar(fontsize = 8, fontface = "bold"))
}
}
)
# 保存图片 - 大幅增加左下角边距
png("Bacteria_Virus_Correlation_NatureStyle_Chinese.png",
width = 8000, height = 6000, res = 300)
draw(main_heatmap,
heatmap_legend_side = "left",
annotation_legend_side = "right",
column_title = "细菌-病毒相关性分析",
column_title_gp = gpar(fontsize = 16, fontface = "bold", family = "SimHei"),
# 关键修改：为左下角增加更多边距（下边距和左边距）
padding = unit(c(11, 11, 1, 8), "cm"))  # 下、左、上、右
dev.off()
# 保存PDF版本 - 大幅增加左下角边距
pdf("Bacteria_Virus_Correlation_NatureStyle_Chinese.pdf", width = 30, height = 22)
draw(main_heatmap,
heatmap_legend_side = "left",
annotation_legend_side = "right",
column_title = "细菌-病毒相关性分析",
column_title_gp = gpar(fontsize = 16, fontface = "bold", family = "SimHei"),
# 关键修改：为左下角增加更多边距
padding = unit(c(11, 11, 1, 8), "cm"))  # 下、左、上、右
dev.off()
# 保存相关性结果
write.csv(cor_matrix, "correlation_matrix.csv")
write.csv(pval_matrix, "pvalue_matrix.csv")
cat("分析完成！结果已保存到:", base_path, "\n")
cat("生成的文件:\n")
cat("- Bacteria_Virus_Correlation_NatureStyle_Chinese.png (高清PNG，支持中文)\n")
cat("- Bacteria_Virus_Correlation_NatureStyle_Chinese.pdf (矢量PDF，支持中文)\n")
cat("- correlation_matrix.csv (相关性系数矩阵)\n")
cat("- pvalue_matrix.csv (P值矩阵)\n")
# 显示一些统计信息
cat("\n分析统计:\n")
cat("细菌物种数量:", nrow(cor_matrix), "\n")
cat("病毒物种数量:", ncol(cor_matrix), "\n")
cat("显著相关性数量 (p < 0.05):", sum(pval_matrix < 0.05, na.rm = TRUE), "\n")
cat("强相关性数量 (|r| > 0.6):", sum(abs(cor_matrix) > 0.6, na.rm = TRUE), "\n")
