# 创建空的矩阵框架
row_vars <- unique(results_df$X_Label)
col_vars <- unique(results_df$Y_Label)
# 创建矩阵数据
matrix_data <- expand.grid(RowVar = row_vars, ColVar = col_vars)
matrix_data <- merge(matrix_data, results_df,
by.x = c("RowVar", "ColVar"),
by.y = c("X_Label", "Y_Label"),
all.x = TRUE)
# 移除自身对比和重复对比
matrix_data <- matrix_data[!is.na(matrix_data$Correlation), ]
# 设置因子水平以控制顺序
matrix_data$RowVar <- factor(matrix_data$RowVar,
levels = c("Bacterial\nRichness", "Bacterial\nDiversity",
"Viral\nRichness", "Viral\nDiversity"))
matrix_data$ColVar <- factor(matrix_data$ColVar,
levels = c("Bacterial\nRichness", "Bacterial\nDiversity",
"Viral\nRichness", "Viral\nDiversity"))
# 创建热图
ggplot(matrix_data, aes(x = ColVar, y = RowVar, fill = Correlation)) +
geom_tile(color = "white", linewidth = 1.5) +
geom_text(aes(label = sprintf("%.2f\n%s", Correlation, Significance)),
size = 4.5, color = "black", fontface = "bold") +
scale_fill_gradient2(low = "#2166ac", high = "#b2182b", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Spearman\nCorrelation",
na.value = "grey95") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 11, face = "bold"),
axis.text.y = element_text(size = 11, face = "bold"),
axis.title = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
legend.position = "right",
panel.grid = element_blank()
) +
coord_fixed() +
ggtitle(title) +
# 添加分隔线
geom_hline(yintercept = 2.5, color = "gray30", linewidth = 0.8) +
geom_vline(xintercept = 2.5, color = "gray30", linewidth = 0.8)
}
# 为每个组创建热图
p1 <- create_asymmetric_heatmap(con_results, "Control Group")
# 加载必要的包
library(readxl)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(corrplot)
library(reshape2)
# 设置结果保存路径
results_path <- "D:/PythonProject/micro_MI/metagenome/Graphic/Diversity-Richness_Correlation_Analysis"
if (!dir.exists(results_path)) {
dir.create(results_path, recursive = TRUE)
}
setwd(results_path)
# 读取数据
bacteria_data <- read_excel("D:/PythonProject/micro_MI/metagenome/Absolute_abundance_analysis/filtered_data_1percent/diversity_analysis_OTU/Bacteria_alpha_diversity.xlsx")
virus_data <- read.csv("D:/PythonProject/micro_MI/metagenome/data_figures/filtered_data_1percent_change/diversity_analysis_OTU/alpha_diversity_COMPLETE_virus.csv")
group_data <- read_excel("D:/PythonProject/micro_MI/metagenome/Absolute_abundance_analysis/filtered_data_1percent/sample_metadata.xlsx")
# 数据清洗和预处理 - 移除重复的Group列
bacteria_clean <- bacteria_data %>%
select(SampleID, Chao1, Shannon, Simpson) %>%
rename(Bacterial_Richness = Chao1,
Bacterial_Diversity = Shannon)
virus_clean <- virus_data %>%
select(SampleID, Chao1, Shannon, Simpson) %>%
rename(Viral_Richness = Chao1,
Viral_Diversity = Shannon)
# 合并数据 - 使用group_data作为分组依据
merged_data <- group_data %>%
inner_join(bacteria_clean, by = "SampleID") %>%
inner_join(virus_clean, by = "SampleID")
# 分割数据
con_data <- merged_data %>% filter(Group == "Control")
mi_data <- merged_data %>% filter(Group == "MI")
# 定义所有唯一的对比对（避免重复）
comparison_pairs <- list(
# 细菌 vs 病毒
c("Bacterial_Richness", "Viral_Richness"),
c("Bacterial_Richness", "Viral_Diversity"),
c("Bacterial_Diversity", "Viral_Richness"),
c("Bacterial_Diversity", "Viral_Diversity"),
# 细菌内部
c("Bacterial_Richness", "Bacterial_Diversity"),
# 病毒内部
c("Viral_Richness", "Viral_Diversity")
)
# 计算相关性数据的函数
calculate_pairwise_correlations <- function(data, pairs) {
results <- data.frame()
for (pair in pairs) {
x_col <- pair[1]
y_col <- pair[2]
x <- data[[x_col]]
y <- data[[y_col]]
# 移除NA值
complete_cases <- complete.cases(x, y)
x_clean <- x[complete_cases]
y_clean <- y[complete_cases]
if (length(x_clean) > 3) {
cor_test <- cor.test(x_clean, y_clean, method = "spearman", exact = FALSE)
results <- rbind(results, data.frame(
X_Variable = x_col,
Y_Variable = y_col,
Correlation = cor_test$estimate,
P_value = cor_test$p.value,
Sample_Size = length(x_clean)
))
}
}
return(results)
}
# 计算两组的相关性
con_results <- calculate_pairwise_correlations(con_data, comparison_pairs)
mi_results <- calculate_pairwise_correlations(mi_data, comparison_pairs)
# 添加分组信息
con_results$Group <- "Control"
mi_results$Group <- "MI"
# 合并结果
all_results <- rbind(con_results, mi_results)
# 添加显著性标记
all_results$Significance <- cut(all_results$P_value,
breaks = c(0, 0.001, 0.01, 0.05, 1),
labels = c("***", "**", "*", ""))
# 创建更友好的变量标签
variable_labels <- c(
"Bacterial_Richness" = "Bacterial\nRichness",
"Bacterial_Diversity" = "Bacterial\nDiversity",
"Viral_Richness" = "Viral\nRichness",
"Viral_Diversity" = "Viral\nDiversity"
)
all_results$X_Label <- variable_labels[all_results$X_Variable]
all_results$Y_Label <- variable_labels[all_results$Y_Variable]
# 创建对比标签
all_results$Comparison <- paste(all_results$X_Label, "vs", all_results$Y_Label)
# 设置对比的顺序
comparison_order <- c(
"Bacterial\nRichness vs Viral\nRichness",
"Bacterial\nRichness vs Viral\nDiversity",
"Bacterial\nDiversity vs Viral\nRichness",
"Bacterial\nDiversity vs Viral\nDiversity",
"Bacterial\nRichness vs Bacterial\nDiversity",
"Viral\nRichness vs Viral\nDiversity"
)
all_results$Comparison <- factor(all_results$Comparison, levels = comparison_order)
# 创建分组热图（简洁版本）
p_grouped <- ggplot(all_results, aes(x = Comparison, y = Group, fill = Correlation)) +
geom_tile(color = "white", linewidth = 1.5) +
geom_text(aes(label = sprintf("%.2f\n%s", Correlation, Significance)),
size = 4.5, color = "black", fontface = "bold") +
scale_fill_gradient2(low = "#2166ac", high = "#b2182b", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Spearman\nCorrelation") +
labs(title = "Unique Pairwise Correlations: Bacteria vs Virus Diversity",
x = "Comparison Pairs", y = "Group") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 11, face = "bold"),
axis.text.y = element_text(size = 12, face = "bold"),
axis.title.x = element_text(size = 13, face = "bold", margin = margin(t = 10)),
axis.title.y = element_text(size = 13, face = "bold", margin = margin(r = 10)),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
legend.position = "right",
panel.grid = element_blank(),
plot.margin = margin(1, 1, 1, 1, "cm")
) +
coord_fixed(ratio = 0.4)
# 保存分组热图
ggsave("Grouped_Unique_Correlations.png", p_grouped, width = 14, height = 6, dpi = 300, bg = "white")
ggsave("Grouped_Unique_Correlations.pdf", p_grouped, width = 14, height = 6, bg = "white")
# 创建并排条形图版本
p_bar <- ggplot(all_results, aes(x = Comparison, y = Correlation, fill = Group)) +
geom_col(position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = sprintf("%.2f\n%s", Correlation, Significance),
y = ifelse(Correlation > 0, Correlation + 0.08, Correlation - 0.08)),
position = position_dodge(0.8), size = 3.5, fontface = "bold") +
scale_fill_manual(values = c("Control" = "#1f77b4", "MI" = "#ff7f0e")) +
labs(title = "Unique Pairwise Correlations: Bacteria vs Virus Diversity",
x = "Comparison Pairs",
y = "Spearman Correlation Coefficient",
fill = "Group") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 11, face = "bold"),
axis.text.y = element_text(size = 11, face = "bold"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
legend.position = "top",
panel.grid.major.y = element_line(color = "grey90"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()
) +
ylim(-1, 1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", linewidth = 0.8)
# 保存条形图
ggsave("Bar_Unique_Correlations.png", p_bar, width = 14, height = 8, dpi = 300, bg = "white")
# 保存结果到CSV文件
write.csv(all_results, "Unique_Pairwise_Correlation_Results.csv", row.names = FALSE)
# 创建总结表格
summary_table <- all_results %>%
select(Comparison, Group, Correlation, P_value, Significance, Sample_Size) %>%
arrange(Group, Comparison)
write.csv(summary_table, "Correlation_Summary.csv", row.names = FALSE)
cat("Analysis completed! All results saved to:", results_path, "\n")
cat("Generated files:\n")
cat("- Grouped_Unique_Correlations.png/pdf (分组热图)\n")
cat("- Bar_Unique_Correlations.png (条形图)\n")
cat("- Unique_Pairwise_Correlation_Results.csv (详细结果)\n")
cat("- Correlation_Summary.csv (总结表格)\n")
# 显示关键结果
cat("\nKey Results:\n")
for(i in 1:nrow(all_results)) {
row <- all_results[i, ]
significance_symbol <- ifelse(row$P_value < 0.001, " ***",
ifelse(row$P_value < 0.01, " **",
ifelse(row$P_value < 0.05, " *", "")))
cat(sprintf("%s (%s): r = %.3f, p = %.4f%s\n",
row$Comparison, row$Group, row$Correlation,
row$P_value, significance_symbol))
}
# 加载必要的包
library(readxl)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(corrplot)
library(reshape2)
# 设置结果保存路径
results_path <- "D:/PythonProject/micro_MI/metagenome/Graphic/Diversity-Richness_Correlation_Analysis"
if (!dir.exists(results_path)) {
dir.create(results_path, recursive = TRUE)
}
setwd(results_path)
# 读取数据
bacteria_data <- read_excel("D:/PythonProject/micro_MI/metagenome/Absolute_abundance_analysis/filtered_data_1percent/diversity_analysis_OTU/Bacteria_alpha_diversity.xlsx")
virus_data <- read.csv("D:/PythonProject/micro_MI/metagenome/data_figures/filtered_data_1percent_change/diversity_analysis_OTU/alpha_diversity_COMPLETE_virus.csv")
group_data <- read_excel("D:/PythonProject/micro_MI/metagenome/Absolute_abundance_analysis/filtered_data_1percent/sample_metadata.xlsx")
# 数据清洗和预处理
bacteria_clean <- bacteria_data %>%
select(SampleID, Chao1, Shannon, Simpson) %>%
rename(Bacterial_Richness = Chao1,
Bacterial_Diversity = Shannon)
virus_clean <- virus_data %>%
select(SampleID, Chao1, Shannon, Simpson) %>%
rename(Viral_Richness = Chao1,
Viral_Diversity = Shannon)
# 合并数据
merged_data <- group_data %>%
inner_join(bacteria_clean, by = "SampleID") %>%
inner_join(virus_clean, by = "SampleID")
# 定义指标顺序（保持一致的顺序）
all_columns <- c("Bacterial_Richness", "Bacterial_Diversity",
"Viral_Richness", "Viral_Diversity")
# 分割数据
con_data <- merged_data %>% filter(Group == "Control")
mi_data <- merged_data %>% filter(Group == "MI")
# 计算完整相关性矩阵的函数（但只保留下三角）
calculate_lower_triangle_correlations <- function(data, columns) {
n <- length(columns)
cor_matrix <- matrix(NA, nrow = n, ncol = n)
pval_matrix <- matrix(NA, nrow = n, ncol = n)
# 计算所有配对的相关性
for (i in 1:n) {
for (j in 1:n) {
if (i > j) {  # 只保留下三角部分
x <- data[[columns[i]]]
y <- data[[columns[j]]]
# 移除NA值
complete_cases <- complete.cases(x, y)
x_clean <- x[complete_cases]
y_clean <- y[complete_cases]
if (length(x_clean) > 3) {
cor_test <- cor.test(x_clean, y_clean, method = "spearman", exact = FALSE)
cor_matrix[i, j] <- cor_test$estimate
pval_matrix[i, j] <- cor_test$p.value
}
}
}
}
rownames(cor_matrix) <- columns
colnames(cor_matrix) <- columns
rownames(pval_matrix) <- columns
colnames(pval_matrix) <- columns
return(list(correlation = cor_matrix, pvalue = pval_matrix))
}
# 计算两组的相关性（下三角）
con_corr <- calculate_lower_triangle_correlations(con_data, all_columns)
mi_corr <- calculate_lower_triangle_correlations(mi_data, all_columns)
# 创建下三角热图函数
create_lower_triangle_heatmap <- function(corr_results, title) {
cor_matrix <- corr_results$correlation
pval_matrix <- corr_results$pvalue
# 将矩阵转换为长格式
cor_melted <- melt(cor_matrix, na.rm = TRUE)
pval_melted <- melt(pval_matrix, na.rm = TRUE)
# 合并相关性和p值
plot_data <- cbind(cor_melted, pvalue = pval_melted$value)
colnames(plot_data) <- c("RowVar", "ColVar", "Correlation", "pvalue")
# 添加显著性星号
plot_data$significance <- cut(plot_data$pvalue,
breaks = c(0, 0.001, 0.01, 0.05, 1),
labels = c("***", "**", "*", ""),
include.lowest = TRUE)
# 创建更友好的标签
variable_labels <- c(
"Bacterial_Richness" = "Bacterial\nRichness",
"Bacterial_Diversity" = "Bacterial\nDiversity",
"Viral_Richness" = "Viral\nRichness",
"Viral_Diversity" = "Viral\nDiversity"
)
plot_data$RowLabel <- variable_labels[plot_data$RowVar]
plot_data$ColLabel <- variable_labels[plot_data$ColVar]
# 设置因子水平以控制顺序
row_levels <- c("Bacterial\nRichness", "Bacterial\nDiversity",
"Viral\nRichness", "Viral\nDiversity")
col_levels <- c("Bacterial\nRichness", "Bacterial\nDiversity",
"Viral\nRichness", "Viral\nDiversity")
plot_data$RowLabel <- factor(plot_data$RowLabel, levels = row_levels)
plot_data$ColLabel <- factor(plot_data$ColLabel, levels = col_levels)
# 创建热图
p <- ggplot(plot_data, aes(x = ColLabel, y = RowLabel, fill = Correlation)) +
geom_tile(color = "white", linewidth = 1.5) +
geom_text(aes(label = sprintf("%.2f\n%s", Correlation, significance)),
size = 5, color = "black", fontface = "bold") +
scale_fill_gradient2(low = "#2166ac", high = "#b2182b", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Spearman\nCorrelation") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, size = 11, face = "bold"),
axis.text.y = element_text(size = 11, face = "bold"),
axis.title = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
legend.position = "right",
panel.grid = element_blank()
) +
coord_fixed() +
ggtitle(title) +
# 隐藏上三角部分（通过设置不显示文本）
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE)
return(p)
}
# 创建并排下三角热图
p1 <- create_lower_triangle_heatmap(con_corr, "Control Group")
p2 <- create_lower_triangle_heatmap(mi_corr, "MI Group")
# 组合图形
combined_plot <- ggarrange(p1, p2, ncol = 2, common.legend = TRUE, legend = "right")
# 添加总标题
combined_plot <- annotate_figure(combined_plot,
top = text_grob("Lower Triangle Correlation Matrix: Bacteria vs Virus Diversity",
face = "bold", size = 18))
# 保存ggplot图形
ggsave("Lower_Triangle_Correlations.png", combined_plot, width = 14, height = 7, dpi = 300, bg = "white")
ggsave("Lower_Triangle_Correlations.pdf", combined_plot, width = 14, height = 7, bg = "white")
# 使用corrplot包创建专业的下三角矩阵
png("Lower_Triangle_Correlations_corrplot.png", width = 12, height = 6, units = "in", res = 300)
par(mfrow = c(1, 2), mar = c(0, 0, 3, 0))
# 创建友好的标签
friendly_labels <- c("Bac_Rich", "Bac_Div", "Vir_Rich", "Vir_Div")
# Control组下三角相关性图
corrplot(con_corr$correlation,
method = "color",
type = "lower",
order = "original",
addCoef.col = "black",
tl.col = "black",
tl.srt = 0,
tl.cex = 1.2,
tl.pos = "ld",  # 标签在左边和底部
cl.cex = 0.8,
col = colorRampPalette(c("#2166ac", "white", "#b2182b"))(200),
mar = c(0, 0, 2, 0),
number.cex = 1.0,
diag = FALSE,  # 不显示对角线
title = "Control Group")
# MI组下三角相关性图
corrplot(mi_corr$correlation,
method = "color",
type = "lower",
order = "original",
addCoef.col = "black",
tl.col = "black",
tl.srt = 0,
tl.cex = 1.2,
tl.pos = "ld",  # 标签在左边和底部
cl.cex = 0.8,
col = colorRampPalette(c("#2166ac", "white", "#b2182b"))(200),
mar = c(0, 0, 2, 0),
number.cex = 1.0,
diag = FALSE,  # 不显示对角线
title = "MI Group")
# 添加总标题
mtext("Lower Triangle Correlation Matrix: Bacteria vs Virus Diversity",
side = 3, outer = TRUE, line = -1.5, cex = 1.5, font = 2)
dev.off()
# 保存结果到CSV文件
write.csv(round(con_corr$correlation, 3), "Control_Group_LowerTriangle_Correlations.csv")
write.csv(round(con_corr$pvalue, 4), "Control_Group_LowerTriangle_Pvalues.csv")
write.csv(round(mi_corr$correlation, 3), "MI_Group_LowerTriangle_Correlations.csv")
write.csv(round(mi_corr$pvalue, 4), "MI_Group_LowerTriangle_Pvalues.csv")
cat("Analysis completed! All results saved to:", results_path, "\n")
cat("Generated files:\n")
cat("- Lower_Triangle_Correlations.png/pdf (ggplot版本)\n")
cat("- Lower_Triangle_Correlations_corrplot.png (corrplot版本)\n")
cat("- Control_Group_LowerTriangle_Correlations.csv\n")
cat("- Control_Group_LowerTriangle_Pvalues.csv\n")
cat("- MI_Group_LowerTriangle_Correlations.csv\n")
cat("- MI_Group_LowerTriangle_Pvalues.csv\n")
# 显示下三角矩阵的内容
cat("\nControl Group Lower Triangle Correlations:\n")
print(round(con_corr$correlation, 3))
cat("\nMI Group Lower Triangle Correlations:\n")
print(round(mi_corr$correlation, 3))
# 加载必要的包
library(readxl)
library(reshape2)
library(pheatmap)
library(dplyr)
# 设置输出目录
output_dir <- "D:/PythonProject/micro_MI/metagenome/Graphic/Virus-Host_Factor_Correlation_Heatmap"
# 1. 读取数据
data <- read_excel("D:/PythonProject/micro_MI/origin_data/样本协变量数据.xlsx", sheet = "Sheet1")
# 2. 数据预处理
colnames(data) <- c("分析名称", "分组", "性别", "年龄", "BMI", "吸烟", "饮酒",
"Observed", "Chao1", "Shannon", "Simpson", "InvSimpson", "ACE")
# 将分组转换为数值：CON=0, MI=1
data$分组数值 <- ifelse(data$分组 == "MI", 1, 0)
# 3. 选择用于相关性分析的变量
host_factors <- c("分组数值", "性别", "年龄", "BMI", "吸烟", "饮酒")
alpha_diversity <- c("Observed", "Chao1", "Shannon", "Simpson", "InvSimpson", "ACE")
# 4. 计算Spearman相关性
cor_matrix <- matrix(NA, nrow = length(alpha_diversity), ncol = length(host_factors),
dimnames = list(alpha_diversity, host_factors))
pval_matrix <- matrix(NA, nrow = length(alpha_diversity), ncol = length(host_factors),
dimnames = list(alpha_diversity, host_factors))
for (i in 1:length(alpha_diversity)) {
for (j in 1:length(host_factors)) {
alpha_var <- data[[alpha_diversity[i]]]
host_var <- data[[host_factors[j]]]
test_result <- cor.test(alpha_var, host_var, method = "spearman", exact = FALSE)
cor_matrix[i, j] <- test_result$estimate
pval_matrix[i, j] <- test_result$p.value
}
}
# 重命名列标签为英文
colnames(cor_matrix) <- c("MI", "Gender", "Age", "BMI", "Smoking", "Drinking")
colnames(pval_matrix) <- c("MI", "Gender", "Age", "BMI", "Smoking", "Drinking")
# 对相关系数矩阵进行四舍五入，确保热图和保存结果一致
cor_matrix_rounded <- round(cor_matrix, 3)
# 5. 准备热图显示内容
sig_symbols <- matrix("", nrow = nrow(pval_matrix), ncol = ncol(pval_matrix))
sig_symbols[pval_matrix < 0.05] <- "*"
sig_symbols[pval_matrix < 0.01] <- "**"
sig_symbols[pval_matrix < 0.001] <- "***"
display_matrix <- matrix(
paste0(sprintf("%.3f", cor_matrix_rounded), "\n", sig_symbols),
nrow = nrow(cor_matrix_rounded),
dimnames = dimnames(cor_matrix_rounded)
)
# 6. Lancet风格配色
lancet_style <- colorRampPalette(c("#00468B", "white", "#ED0000"))(100)
# 7. Lancet风格热图
pdf(file.path(output_dir, "AlphaDiversity_Correlation_LancetStyle.pdf"),
width = 9, height = 7)
pheatmap(cor_matrix_rounded,  # 使用四舍五入后的矩阵
cluster_rows = FALSE,
cluster_cols = FALSE,
display_numbers = display_matrix,
number_color = "black",
fontsize_number = 8,
main = "Spearman Correlation: Alpha-Diversity vs Host Factors",
color = lancet_style,
breaks = seq(-1, 1, length.out = 101),
cellwidth = 45,
cellheight = 35,
fontsize = 12,
border_color = "white",
angle_col = 0,
legend = TRUE)
dev.off()
# 8. 保存相关性结果（使用四舍五入后的值确保一致性）
cor_results <- data.frame(
Alpha_Diversity = rep(alpha_diversity, each = length(host_factors)),
Host_Factor = rep(c("MI", "Gender", "Age", "BMI", "Smoking", "Drinking"), times = length(alpha_diversity)),
Correlation = as.vector(cor_matrix_rounded),  # 使用四舍五入后的值
P_value = as.vector(pval_matrix)
)
# 添加显著性标记
cor_results$Significance <- ""
cor_results$Significance[cor_results$P_value < 0.05] <- "*"
cor_results$Significance[cor_results$P_value < 0.01] <- "**"
cor_results$Significance[cor_results$P_value < 0.001] <- "***"
write.csv(cor_results, file.path(output_dir, "AlphaDiversity_HostFactors_Correlation_Results.csv"),
row.names = FALSE, fileEncoding = "UTF-8")
# 9. 显示统计摘要
cat("分析完成！生成Lancet风格热图：\n")
cat("文件: AlphaDiversity_Correlation_LancetStyle.pdf\n")
cat("风格: Lancet风格（深蓝-白-深红）\n")
cat("\n总样本:", nrow(data), "(CON:", sum(data$分组=="CON"), "MI:", sum(data$分组=="MI"), ")\n")
cat("相关性矩阵维度:", nrow(cor_matrix), "x", ncol(cor_matrix), "\n")
cat("所有相关性系数已统一四舍五入到3位小数，确保热图与CSV文件一致。\n")
# 10. 打印部分结果预览
cat("\n前6个相关性结果预览：\n")
print(head(cor_results))
# 11. 检查是否有显著相关性
significant_count <- sum(cor_results$P_value < 0.05)
cat("\n显著性统计：\n")
cat("P < 0.05 的相关性数量:", significant_count, "/", nrow(cor_results), "\n")
cat("P < 0.01 的相关性数量:", sum(cor_results$P_value < 0.01), "/", nrow(cor_results), "\n")
cat("P < 0.001 的相关性数量:", sum(cor_results$P_value < 0.001), "/", nrow(cor_results), "\n")
